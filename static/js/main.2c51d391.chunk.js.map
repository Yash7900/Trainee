{"version":3,"sources":["actions/actions.js","Component/AddTrainee.js","Component/ViewTrainee.js","Component/Home.js","Component/ReactRouter.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["BASE_URL","AddTrainee","props","id","React","createRef","name","domain","location","this","clearState","returnedMessage","split","setTimeout","history","push","newTrainee","current","value","onAddTrainee","trainee","onUpdateTrainee","class","for","type","ref","required","onClick","add","bind","update","className","role","Component","connect","state","dispatch","axios","post","then","response","alert","data","newTraineeObject","newTraineeDetails","put","withRouter","ViewTrainee","onGetTrainees","traineeId","onDeleteTrainee","traineesList","map","index","delete","scope","get","actionCreated","Home","console","log","ReactRouter","to","exact","path","App","counterSlice","createSlice","initialState","reducers","increment","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c51d391.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const ADD_TRAINEE = 'ADD_TRAINEE'\r\nexport const GET_ALL_TRAINEES = 'GET_ALL_TRAINEES'\r\nexport const DELETE_TRAINEE = 'DELETE_TRAINEE'\r\nexport const UPDATE_TRAINEE = 'UPDATE_TRAINEE'\r\nexport const GET_TRAINEE_BY_ID = 'GET_TRAINEE_BY_ID'\r\nexport const CLEAR_STATE = 'CLEAR_STATE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n\r\n\r\n\r\nconst BASE_URL = 'http://localhost:8080/api/trainee/'\r\n\r\n\r\nconst getAllTraineesAction = (data) => {\r\n    return {\r\n        type: GET_ALL_TRAINEES,\r\n        data\r\n    }\r\n}\r\nexport const getAllTrainees = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL)\r\n            .then((response) => {\r\n                dispatch(getAllTraineesAction(response.data))\r\n                \r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst addTraineeAction = (data) => {\r\n    return {\r\n        type: ADD_TRAINEE,\r\n        data\r\n    }\r\n}\r\nexport const addTrainee = (newTrainee) => {\r\n    return (dispatch) => {\r\n        axios.post(BASE_URL, newTrainee)\r\n            .then((response) => {\r\n                alert(\"Trainee Sucessfully added\")\r\n                dispatch(addTraineeAction(response.data))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst deleteTraineeAction = (data) => {\r\n    return {\r\n        type: DELETE_TRAINEE,\r\n        data\r\n    }\r\n}\r\nexport const deleteTrainee = (traineeId) => {\r\n    return (dispatch) => {\r\n        axios.delete(BASE_URL + traineeId)\r\n            .then((response) => {\r\n                dispatch(deleteTraineeAction(response.data))\r\n            })\r\n    }\r\n}\r\n\r\nconst updateTraineeAction = (data) => {\r\n    return {\r\n        type: UPDATE_TRAINEE,\r\n        data\r\n    }\r\n}\r\nexport const updateTrainee = (newTraineeDetails) => {\r\n    return (dispatch) => {\r\n        axios.put(BASE_URL+'updatetrainee/'+newTraineeDetails.id, newTraineeDetails)\r\n            .then((response) => {\r\n                alert(\"Trainee Updated added\")\r\n                dispatch(updateTraineeAction(response.data))\r\n            })\r\n    }\r\n}\r\n//search by domain action\r\nconst getTraineeByIdAction = (data) => {\r\n    return {\r\n        type: GET_TRAINEE_BY_ID,\r\n        data\r\n    }\r\n}\r\n//search by id function\r\nexport const getTraineeById = (traineeId) => {\r\n    return (dispatch) => {\r\n        let URL = `http://localhost:8080/trainee/view?traineeId=${traineeId}`\r\n        axios.get(URL)\r\n            .then((response) => {\r\n                dispatch(getTraineeByIdAction(response.data))\r\n            })\r\n    }\r\n}\r\n\r\n//action to clear state\r\nconst clearStateAction = (data) => {\r\n    return {\r\n        type: CLEAR_STATE,\r\n        data\r\n    }\r\n}\r\n\r\n//clear state function\r\nexport const clearState = () => {\r\n    return (dispatch) => {\r\n        dispatch(clearStateAction())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as actionCreators from '../actions/actions'\r\n\r\nclass AddTrainee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = React.createRef();\r\n        this.name = React.createRef();\r\n        this.domain = React.createRef();\r\n        this.location = React.createRef();\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.clearState()\r\n    }\r\n    componentDidUpdate() {\r\n        let check = this.props.returnedMessage.split(' ')\r\n        if (check[0] === 'Successfully') {\r\n            setTimeout(() => {\r\n                this.props.history.push('/listOfTrainees')\r\n            }, 2000)\r\n        }\r\n    }\r\n    add() {\r\n        let newTrainee = {\r\n            id: this.id.current.value,\r\n            name: this.name.current.value,\r\n            domain: this.domain.current.value,\r\n            location: this.location.current.value,\r\n\r\n        }\r\n\r\n        this.props.onAddTrainee(newTrainee)\r\n\r\n    }\r\n\r\n    update() {\r\n        let trainee = {\r\n            id: this.id.current.value,\r\n            name: this.name.current.value,\r\n            domain: this.domain.current.value,\r\n            location: this.location.current.value,\r\n        }\r\n        this.props.onUpdateTrainee(trainee)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div class=\"container mt-5\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <form>\r\n                  <div class=\"mb-3 row\">\r\n                    <label for=\"first-name\" class=\"col-sm-4 col-form-label\">\r\n                      Trainee Id\r\n                    </label>\r\n                    <div class=\"col-sm-5 \">\r\n                      <input\r\n                        type=\"number\"\r\n                        class=\"form-control form-control-sm\"\r\n                        ref={this.id}\r\n                        name=\"Id\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div class=\"mb-3 row\">\r\n                    <label for=\"last-name\" class=\"col-sm-4 col-form-label\">\r\n                      Trainee Name\r\n                    </label>\r\n                    <div class=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control form-control-sm\"\r\n                        ref={this.name}\r\n                        name=\"name\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div class=\"mb-3 row\">\r\n                    <label for=\"last-name\" class=\"col-sm-4 col-form-label\">\r\n                      Trainee Domain\r\n                    </label>\r\n                    <div class=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control form-control-sm\"\r\n                        ref={this.domain}\r\n                        name=\"domain\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n    \r\n                  <div class=\"mb-3 row\">\r\n                    <label for=\"phoneno\" class=\"col-sm-4 col-form-label\">\r\n                      Trainee Location\r\n                    </label>\r\n                    <div class=\"col-sm-5\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control form-control-sm\"\r\n                        ref={this.location}\r\n                        name=\"location\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div class=\"row mt-3\">\r\n                    <div class=\"col\">\r\n                      <button\r\n                        class=\"btn btn-primary btn-sm\"\r\n                        onClick={this.add.bind(this)}\r\n                      >\r\n                        Add\r\n                      </button>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                      <button\r\n                        class=\"btn btn-primary btn-sm\"\r\n                        onClick={this.update.bind(this)}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n    \r\n            <br></br>\r\n            <br></br>\r\n    \r\n            <div className={(this.props.returnedMessage === '') ? '' : \"alert\"} role=\"alert\">\r\n              {this.props.returnedMessage}\r\n            </div>\r\n    \r\n            {/* {this.state.addMessage !== \"\" && (\r\n              <div class=\"alert alert-success\" role=\"alert\">\r\n                {this.state.addMessage}\r\n              </div>\r\n            )}\r\n    \r\n            {this.state.updateMessage !== \"\" && (\r\n              <div class=\"alert alert-success\" role=\"alert\">\r\n                {this.state.updateMessage}\r\n              </div>\r\n            )} */}\r\n          </div>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        returnedMessage: state.returnedMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddTrainee: (trainee) => {\r\n            dispatch(actionCreators.addTrainee(trainee))\r\n        },\r\n        onUpdateTrainee: (id, newTraineeObject) => {\r\n            dispatch(actionCreators.updateTrainee(id, newTraineeObject))\r\n        },\r\n        clearState: () => {\r\n            dispatch(actionCreators.clearState())\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddTrainee))\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreated from '../actions/actions'\r\n\r\nclass ViewTrainee extends Component {\r\n   \r\n    componentDidMount() {\r\n        this.props.onGetTrainees()\r\n    }\r\n\r\n    delete(traineeId){\r\n        this.props.onDeleteTrainee(traineeId);\r\n    }\r\n\r\n    render() {\r\n        let traineesList=this.props.traineesList.map((trainee,index)=>{\r\n            return(\r\n                <tr key={index}>\r\n                    <th>{trainee.id}</th>\r\n                    <td>{trainee.name}</td>\r\n                    <td>{trainee.domain}</td>\r\n                    <td>{trainee.location}</td>\r\n                    <td>\r\n                        <button onClick={this.delete.bind(this,trainee.id)} className=\"btn btn-danger\">DELETE</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n        return (\r\n             <div>\r\n                    <div className=\"trn-table-div\">\r\n                        <h2>{this.props.returnedMessage}</h2>\r\n                        <table className=\"table table-info trn-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Trainee ID</th>\r\n                                    <th scope=\"col\">Trainee Name</th>\r\n                                    <th scope=\"col\">Trainee Domain</th>\r\n                                    <th scope=\"col\">Trainee Location</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {traineesList}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        traineesList:state.traineesList,\r\n        returnedMessage: state.returnedMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetTrainees: () => {\r\n          return  dispatch(actionCreated.getAllTrainees())\r\n        },\r\n        onDeleteTrainee: (traineeId, newTraineeObject) => {\r\n          return dispatch(actionCreated.deleteTrainee(traineeId, newTraineeObject))\r\n        },\r\n        clearState: () => {\r\n          return  dispatch(actionCreated.clearState())\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewTrainee)","import React, { Component } from 'react';\r\n\r\n\r\nclass Home extends Component {\r\n    go(){\r\n        console.log(this.props)\r\n        this.props.history.push('/')\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                    <h1>Welcome to Trainee Home Page</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\nimport AddTrainee from './AddTrainee'\r\nimport ViewTrainee from './ViewTrainee';\r\n//import SearchByTraineeId from './SearchByTraineeId'\r\nimport Home from './Home'\r\n\r\nexport function ReactRouter() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav\">\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\" >Home</Link>\r\n                                </li>\r\n                                \r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/listOfTrainees\">List of Trainee</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/add\">Add/Update</Link>\r\n                                </li>\r\n                                {/* <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/searchByTraineeId\">Search</Link>\r\n                                </li> */}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n                {/* A <Switch> looks through its children <Route>s and\r\nrenders the first one that matches the current URL. */}\r\n                <Switch>\r\n                    <Route exact path=\"/listOfTrainees\">\r\n                        <ViewTrainee></ViewTrainee>\r\n                    </Route>\r\n\r\n                    <Route path=\"/add\">\r\n                        <AddTrainee></AddTrainee>\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <Home></Home>\r\n                    </Route>\r\n\r\n                    {/* <Route path=\"/searchByTraineeId\" component={SearchByTraineeId}/> */}\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default ReactRouter\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport { ReactRouter } from './Component/ReactRouter';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     \r\n     <ReactRouter></ReactRouter>\r\n      {}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}